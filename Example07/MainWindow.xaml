<Window x:Class="Example07.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Example07"
        mc:Ignorable="d"
        Title="Example 07" Height="450" Width="800">
    <StackPanel Orientation="Horizontal">
		<!--This example explores a few different controls that can be used for
		collecting user selection from a range of predefined options.
		
		All WPF controls have key properties that can be manipulated via code-behind,
		as discussed earlier, provided that a name is assigned to the control, or controls,
		in question.
		
		Many of said properties are common across multiple controls. For instance:
		
		- IsChecked,
		- IsSelected,
		- SelectedItem,
		- ItemsSource
		- Content,
		- Etc. -->

		<StackPanel>
			<StackPanel Margin="20">
				<!--Checkboxes are used in contexts that allow multiple selections.-->
				<CheckBox Content="Check Me"/>
				<CheckBox Content="Uncheck Me" IsChecked="True"/>
				<CheckBox Content="Can't check Me" IsEnabled="False"/>
				<CheckBox Content="Can't uncheck Me" IsChecked="True" IsEnabled="False"/>

				<!--Radiobuttons are used in contexts that only allow single selection.
				Radiobuttons that share the same GroupName belong to the same option group.-->
				<RadioButton Content="Option 1" GroupName="Options" Margin="0 10 0 0"/>
				<RadioButton Content="Option 2" GroupName="Options"/>
				<RadioButton Content="Option 3" GroupName="Options"/>
				<RadioButton Content="Option 4" GroupName="Options"/>
			</StackPanel>
		</StackPanel>

		<StackPanel>
			<StackPanel Margin="20">
				<!--Listboxes offer an alternative to single-option selection.-->
				<ListBox>
					<ListBoxItem Content="Option 1"/>
					<ListBoxItem Content="Option 2"/>
					<ListBoxItem Content="Option 3"/>
				</ListBox>

				<!--Listviews offer an alternative to multiple-option selection.-->
				<ListView Margin="0 10 0 0">
					<ListViewItem Content="Option 1"/>
					<ListViewItem Content="Option 2"/>
					<ListViewItem Content="Option 3"/>
				</ListView>
			</StackPanel>
		</StackPanel>

		<StackPanel Margin="20">
			<!--The good ol' combobox we all know and love. 
			Couldn't wrap up with this example without mentioning it.-->
			<ComboBox Width="150">
				<ComboBoxItem Content="Select an option" IsSelected="True" IsEnabled="False"/>
				<ComboBoxItem Content="Option 1"/>
				<ComboBoxItem Content="Option 2"/>
				<ComboBoxItem Content="Option 3"/>
				<ComboBoxItem Content="Option 4"/>
			</ComboBox>
		</StackPanel>
    </StackPanel>
</Window>
